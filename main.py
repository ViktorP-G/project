import sys
import argparse
import os

core_path = os.path.join(os.path.dirname(__file__), 'core')
if core_path not in sys.path:
    sys.path.insert(0, core_path)

try:
    from copy import copy_file
    from delet import delete_file_and_folder
    from rename import rename_file_with_date
except ImportError as e:
    print(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π –∏–∑ core: {e}", file=sys.stderr)
    sys.exit(1)


def create_parser():
    parser = argparse.ArgumentParser(
        prog='mytool',
        description='üîß –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏',
        epilog='–ò—Å–ø–æ–ª—å–∑—É–π: mytool <–∫–æ–º–∞–Ω–¥–∞> --help –∏–ª–∏ mytool --gui –¥–ª—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞',
        formatter_class=argparse.RawDescriptionHelpFormatter
    )
    parser.add_argument("--gui", action="store_true", help="–ó–∞–ø—É—Å—Ç–∏—Ç—å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")

    subparsers = parser.add_subparsers(dest='command', help='–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã')

    p_copy = subparsers.add_parser('copy', help='–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª')
    p_copy.add_argument('file', help='–ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª')
    p_copy.add_argument('folder', help='–ü–∞–ø–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è')
    p_copy.add_argument('--overwrite', action='store_true', help='–†–∞–∑—Ä–µ—à–∏—Ç—å –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å')

    p_del = subparsers.add_parser('delete', help='–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –∏ –ø–∞–ø–∫—É')
    p_del.add_argument('file', help='–§–∞–π–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è')
    p_del.add_argument('folder', help='–ü–∞–ø–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è')
    p_del.add_argument('--quiet', action='store_true', help='–ë–µ–∑ –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π')

    p_rename = subparsers.add_parser('rename', help='–î–æ–±–∞–≤–∏—Ç—å –¥–∞—Ç—É –∫ –∏–º–µ–Ω–∏')
    p_rename.add_argument('file', help='–§–∞–π–ª –¥–ª—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è')
    p_rename.add_argument('folder', help='–ü–∞–ø–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏')
    p_rename.add_argument('--recursive', action='store_true', help='–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–¥–ø–∞–ø–∫–∏')

    return parser


def run_copy(args):
    success, message = copy_file(args.file, args.folder, args.overwrite)
    if success:
        print(message)
    else:
        print(message, file=sys.stderr)
        sys.exit(1)


def run_delete(args):
    success, message = delete_file_and_folder(args.file, args.folder, args.quiet)
    if success:
        print(message)
    else:
        print(message, file=sys.stderr)
        sys.exit(1)


def run_rename(args):
    success, message = rename_file_with_date(args.file, args.folder, args.recursive)
    if success:
        print(message)
    else:
        print(message, file=sys.stderr)
        sys.exit(1)


def main():
    parser = create_parser()
    args = parser.parse_args()

    if args.gui:
        try:
            from interface import gui
            print("–ó–∞–ø—É—Å–∫ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
            gui.run_gui()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ GUI: {e}", file=sys.stderr)
            sys.exit(1)
        return

    if not args.command:
        parser.print_help()
        sys.exit(0)

    try:
        if args.command == 'copy':
            run_copy(args)
        elif args.command == 'delete':
            run_delete(args)
        elif args.command == 'rename':
            run_rename(args)
        else:
            parser.print_help()
            sys.exit(1)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}", file=sys.stderr)
        sys.exit(1)


if __name__ == "__main__":
    main()